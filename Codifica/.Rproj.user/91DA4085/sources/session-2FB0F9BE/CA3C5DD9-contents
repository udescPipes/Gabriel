#Introdução ao pacote dplyr

# Obter o diretório do projeto
getwd()

#
setwd("D:/Gabriel/Meus_Projetos/GitHub/Gabriel/Codifica")




if(!require(dplyr)){
  install.packages("dplyr")
}

library(dplyr)


#Base de dado que será utilizado no projeto inicial
dados <- read.delim("imdb.txt")



#Obter um resumo estatístico sobre todas as colunas do dataframe
summary(dados)

#Visualizar os dados em forma de tabela (gráfica)
View(dados)

#Verificar o tipo de dado correspondente a variável
class(dados)

#Verificar a maneira que os dados de cada coluna estão configurados
mode(dados)


# Visualizar o tipo de dado de cada coluna do dataframe - Biblioteca dplyr (dependente tidyverse)
glimpse(dados)


# ------------------------------->> Biblioteca DPLYR - Manipulação de dados <<---------------------

# Obter os dados de colunas específicas, de forma padrão

aux <- dados[,c("titulo", "orcamento", "generos")]

# ---------------------------->> Select - selecionar colunas específicas da base de dados

#Forma sem utilizar o operador Pipe
aux <- select(dados, c("titulo", "orcamento"))

#Forma utilizando o operador PIpe (%>%)
aux <- dados %>% select(titulo, orcamento, producao)


# ---------------------------->> Arrange - ordenar colunas específicas da base de dados

# Sem utilizar o operador Pipe
aux <- arrange(dados, orcamento) #ordenar de forma crescente
aux <- arrange(dados, -orcamento) #Ordenar de forma decrescente
aux <- arrange(dados, desc(orcamento))  #Ordenar de forma decrescente

# Utilizando o operador pipe
aux <- dados %>% arrange(orcamento)

#Ordenar a partir de mais de uma coluna
aux <- dados %>% arrange(desc(receita))


# ---------------------------->> Filter - filtrar os dados com base numa condição

#Filtrar com apenas uma condição em determinada coluna - 1 distribuidor
aux <- dados %>% filter(producao == "Universal Pictures")

#Filtrar com mais de uma condição em determinada coluna -
aux <- dados %>% filter(producao %in% c("Universal Pictures", "Lucasfilm"))

# ---------------------------->> Mutate - alterar ou adicionar nova coluna
dados <- dados %>% mutate(
  lucro = receita - orcamento
)

#Modificar o tipo de dado da coluna data_lancamento, colocar como data e no seguinte formato: ano-mes-dia
dados$data_lancamento = as.Date(dados$data_lancamento, format= "%Y-%m-%d")

# Criar uma nova coluna no dataframe dados
dados <- dados %>%
  mutate(
    mes = format(data_lancamento, "%m") #Coluna que pega somente o mês (necessita estar do tipo data)
  )





# ---------------------------->> Sumarise - resumir dados utilizando métricas (media, mediana)
aux <- dados %>% summarise(
  media_orcamento = mean(orcamento, na.rm = TRUE) #Obter a média de orçamento de todos os filmes
)

# Filtrar os dados de determinada produtora, selecionar as colunas e ordenar a partir do lucro em ordem decrescente
aux <- dados %>%
  filter(producao %in% c("Marvel Studios", "Lucasfilm")) %>%
  select(titulo, producao, ano, lucro) %>%
  arrange(desc(lucro))





# Obter a media de colunas, conforme mencionado abaixo
tb_lucro_producao <- dados %>%
  group_by(producao) %>% #Agrupar os dados a partir da produtora
  summarise(
    media_lucro = mean(lucro, na.rm = TRUE),
    media_receita = mean(receita, na.rm = TRUE),
    media_orcamento = mean(orcamento, na.rm = TRUE),
    media_nota_imdb = mean(nota_imdb, na.rm = TRUE),
    qtd_filmes = n()) %>%
  filter(qtd_filmes > 10)

# Obter a media de colunas, conforme mencionado abaixo
tb_lucro_diretor <- dados %>%
  group_by(direcao) %>%
  summarise(
    media_receita = mean(receita, na.rm = TRUE),
    qtd_filmes = n()
  )

# Obter a media de colunas, conforme mencionado abaixo
tb_diretor_produtora <- dados %>%
  group_by(direcao, producao) %>%
  summarise(
    qtd_filmes = n(), #Obter a qtd de instâncias conforme o agrupamento
    receita = sum(lucro) #Realizar a soma das variáveis, função su
  )


# Obter a media de colunas, conforme mencionado abaixo
tb_filmes_ano <- dados %>%
  group_by(ano) %>%
  summarise(
    qtd_filmes = n()
  )

# Obter a media de colunas, conforme mencionado abaixo
tb_filmes_mes <- dados %>%
  group_by(mes, ano) %>%
  summarise(
    qtd_filmes = n()
  )


#Instalar a biblioteca tidytext, utilizada para manipulação de strings
if(!require(tidytext)){
  install.packages("tidytext")
}

library(tidytext)


#Ao selecionar a coluna generos, a função unnest_tokeens fará a quebra de cada palavra da coluna genero e adicionará em uma nova linha
tb_filme_genero <- dados %>%
  select(id_filme, titulo, generos) %>%
  unnest_tokens(genero, generos) #Biblioteca tiedytext -

#Ao selecionar a coluna generos, a função unnest_tokeens fará a quebra de cada coluna elenco, separado por vírgula e adicionará em uma nova linha
tb_ator_filme <- dados %>%
  select(id_filme, titulo, elenco) %>%
  unnest_tokens(ator, elenco, token = stringr::str_split, pattern = ",")
#1º nome da nova coluna,
#2º variável a ser manipulada
#3º forma que será realizado a quebra (opcional)
#4º parâmetro a ser utlizado na quebra, neste caso a vírgula (opcional)


aux <- tb_diretor_produtora %>%
  filter(producao == "Universal Pictures", qtd_filmes > 5) %>%
  arrange(desc(qtd_filmes))

aux <- tb_ator_filme %>%
  filter(word == tolower("Harrison Ford"))

aux <- tb_ator_filme %>%
  filter(titulo == "Thor")


aux2 <- dados %>%
  filter(titulo %in% aux$titulo)

aux3 <- aux2 %>%
  select(receita, ano, titulo) %>%
  mutate(
    receita_ano = sum(receita)
  )

#Biblioteca utilizada para criação de gráficos no R (outra ggplot)
if(!require(plotly)){
  install.packages("plotly")
}


library(plotly)


#Gráfico quantidade de filmes por ator - Plotly
plot_ly(data = aux2) %>% #Informar a base de dados a ser utilizada (data)
  add_bars(x = ~ano, y = ~receita, text = ~titulo) #Criar gráfico de barra, informando os valor da coordenada X e Y, text = valor apresentado na visualização


library(ggplot2)

#Gráfico quantidade de filmes por ano - GGPLOT
ggplot(data = tb_filmes_ano) + #Informar a base de dados a ser utilizada (data)
  geom_col(aes(x = ano, y = qtd_filmes, color = ano)) +
  labs(title = "Filmes produzidos por ano")



teste <-  tb_filmes_ano %>% arrange(desc(ano)) 



