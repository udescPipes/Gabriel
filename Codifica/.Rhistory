dadosTXT <- read.delim("imdb.txt") #Formato padrão, no qual o sep = "\t - tabulação"
dadosTXT <- dadosTXT %>%
mutate(
data_lancamento = as.Date(data_lancamento, format="%d-%m-%Y")
)
#Importar um arquivo de texto
dadosTXT <- read.delim("imdb.txt") #Formato padrão, no qual o sep = "\t - tabulação"
# Visualizar o tipo de dado de cada coluna do dataframe - Biblioteca dplyr (dependente tidyverse)
glimpse(dadosTXT)
#Obter o diretorio
getwd()
install.packages("dplyr")
if(!require(dplyr)){
install.packages("dplyr")
}
library(dplyr)
#Introdução ao pacote dplyr
getwd()
#
setwd("D:/Gabriel/Meus_Projetos/GitHub/Gabriel/Codifica")
#Base de dado que será utilizado no projeto inicial
dados <- read.csv("LucroFilmes.csv", sep=";", dec = ",")
View(dados)
#Obter um resumo estatístico sobre todas as colunas do dataframe
summary(dados)
#Visualizar os dados em forma de tabela (gráfica)
View(dados)
#Verificar o tipo de dado correspondente a variável
class(dados)
#Verificar a maneira que os dados de cada coluna estão configurados
mode(dados)
# Visualizar o tipo de dado de cada coluna do dataframe - Biblioteca dplyr (dependente tidyverse)
glimpse(dados)
# Select - selecionar colunas específicas da base de dados
aux <- select(dados, c("Filme", "Orcamento"))
View(aux)
aux <- dados %>% select(Filme, Orcamento, Distribuidor)
View(aux)
aux <- dados[,c("Filme", "Orcamento")]
View(aux)
aux <- dados[,c("Filme", "Orcamento", "Genero")]
View(aux)
for(i in 1:nrow(dados)){
print(i)
}
for(i in 1:nrow(dados)){
for(j in (i + 1):nrow(dados)){
print(i, j)
}
}
print(paste0(i, j))
for(i in 1:nrow(dados)){
inicio <- i + 1
for(j in inicio:nrow(dados)){
print(paste0(i, j))
}
}
for(i in 1:nrow(dados)){
inicio <- i + 1
for(j in inicio:nrow(dados)){
print(paste0(i, j))
}
break
}
in
for(i in 1:nrow(dados)){
inicio <- i + 1
for(j in inicio:nrow(dados)){
print(paste(i, j))
}
break
}
for(i in 1:nrow(dados)){
inicio <- i + 1
for(j in inicio:nrow(dados)){
if(dados[i]$LucroMundial < dados[j]$LucroMundial){
aux <- dados[j,]
dados[i,] <- dados[j, ]
dados[j, ] <- aux
}
}
}
View(dados)
#Base de dado que será utilizado no projeto inicial
dados <- read.csv("LucroFilmes.csv", sep=";", dec = ",")
View(dados)
for(i in 1:nrow(dados)){
inicio <- i + 1
for(j in inicio:nrow(dados)){
if(dados[i]$LucroMundial > dados[j]$LucroMundial){
aux <- dados[j,]
dados[i,] <- dados[j, ]
dados[j, ] <- aux
}
}
}
#Base de dado que será utilizado no projeto inicial
dados <- read.csv("LucroFilmes.csv", sep=";", dec = ",")
for(i in 1:nrow(dados)){
inicio <- i + 1
for(j in inicio:nrow(dados)){
if(dados[i]$LucroMundial < dados[j]$LucroMundial){
aux <- dados[j,]
dados[i,] <- dados[j, ]
dados[j, ] <- aux
}
}
}
# Ordenar as linhas
aux <- arrange(dados, Orcamento)
View(aux)
aux <- arrange(dados, -Orcamento)
View(aux)
aux <- arrange(dados, desc(Orcamento))
# Utilizando o operador pipe
aux <- dados %>% arrange(Orcamento)
View(aux)
#Ordenar a partir de mais de uma coluna
aux <- dados %>% arrange(desc(Orcamento), desc(LucroMundial))
View(aux)
#Ordenar a partir de mais de uma coluna
aux <- dados %>% arrange(desc(LucroMundial))
aux
View(aux)
# ---------------------------->> Filter - filtrar os dados com base numa condição
aux <- dados %>% filter(Distribuidor == "Walt Disney", Distribuidor == "Universal")
# ---------------------------->> Filter - filtrar os dados com base numa condição
aux <- dados %>% filter(Distribuidor == "Walt Disney")
# ---------------------------->> Filter - filtrar os dados com base numa condição
aux <- dados %>% filter(Distribuidor == "Universal")
View(aux)
#Filtrar com mais de uma condição em determinada coluna -
aux <- dados %>% filter(Distribuidor %in% c("Universal", "Warner Bros."))
View(aux)
#Filtrar com mais de uma condição em determinada coluna -
aux <- dados %>% filter(Distribuidor %in% c("Universal", "Warner Bros."))
#Filtrar com mais de uma condição em determinada coluna -
aux <- dados %>% filter(Distribuidor %in% c("Universal", "Warner Bros. "))
#Filtrar com mais de uma condição em determinada coluna -
aux <- dados %>% filter(Distribuidor %in% c("Universal", "Lionsgate"))
View(aux)
dadosTXT <- dadosTXT %>%
mutate(
data_lancamento = as.Date(data_lancamento, format="%m-%d-%Y")
)
# ---------------------------->> Mutate - alterar ou adicionar nova coluna
aux <- dados %>% mutate(
lucro = LucroMundial - Orcamento
)
# ---------------------------->> Mutate - alterar ou adicionar nova coluna
aux <- dados %>% mutate(
lucro = LucroMundial - Orcamento
)
library(dplyr)
# ---------------------------->> Mutate - alterar ou adicionar nova coluna
aux <- dados %>% mutate(
lucro = LucroMundial - Orcamento
)
View(dados)
# ---------------------------->> Mutate - alterar ou adicionar nova coluna
dados <- dados %>% mutate(
lucro = LucroMundial - Orcamento
)
View(dados)
View(dados)
# Junção das funções
aux <- dados %>%
filter(Distribuidor == "Walt Disney")
# Junção das funções
aux <- dados %>%
filter(Distribuidor == "Walt Disney ")
# Junção das funções
aux <- dados %>%
filter(Distribuidor == " Walt Disney ")
glimpse(dados$Distribuidor)
# Junção das funções
aux <- dados %>%
filter(Distribuidor == "Walt Disney")
View(aux)
# Junção das funções
aux <- dados %>%
filter(Distribuidor == "Paramount Pictures")
# Junção das funções
aux <- dados %>%
filter(Distribuidor == "ParamountPictures")
# Junção das funções
aux <- dados %>%
filter(Distribuidor == "Universal")
# ---------------------------->> Sumarise - resumir dados utilizando métricas (media, mediana)
dados <- summarise(
media_orcamento = mean(orcamento, na.rm = TRUE)
)
# ---------------------------->> Sumarise - resumir dados utilizando métricas (media, mediana)
dados <- summarise(
media_orcamento = mean(Orcamento, na.rm = TRUE)
)
# ---------------------------->> Sumarise - resumir dados utilizando métricas (media, mediana)
dados <- dados %>% summarise(
media_orcamento = mean(Orcamento, na.rm = TRUE)
)
View(dados)
# ---------------------------->> Sumarise - resumir dados utilizando métricas (media, mediana)
aux <- dados %>% summarise(
media_orcamento = mean(Orcamento, na.rm = TRUE)
)
#Base de dado que será utilizado no projeto inicial
dados <- read.csv("LucroFilmes.csv", sep=";", dec = ",")
# Junção das funções
aux <- dados %>%
filter(Distribuidor == "Universal")
# ---------------------------->> Sumarise - resumir dados utilizando métricas (media, mediana)
aux <- dados %>% summarise(
media_orcamento = mean(Orcamento, na.rm = TRUE)
)
#Base de dado que será utilizado no projeto inicial
dados <- read.csv("imdb.csv", sep=";", dec = ",")
View(dados)
#Base de dado que será utilizado no projeto inicial
dados <- read.csv("imdb.csv", sep=".", dec = ",")
View(dados)
dados <- read.delim("imdb.txt")
View(dados)
# ---------------------------->> Mutate - alterar ou adicionar nova coluna
dados <- dados %>% mutate(
lucro = receita - orcamento
)
aux <- dados %>% filter(producao == "Marvel Studios")
View(aux)
aux <- dados %>% filter(producao %in% c("Marvel Studios", "Lucasfilm"))
View(aux)
View(aux)
aux <- dados %>%
filter(producao %in% c("Marvel Studios", "Lucasfilm")) %>%
select(titulo, producao, ano, lucro) %>%
arrange(desc(lucro))
View(aux)
library(ggplot2)
ggplot(data = aux) +
geom_bar(aes(x = lucro, y = ano, colors = producao))
ggplot(data = aux) +
geom_bar(aes(x = lucro, y = ano, color = producao))
ggplot(data = aux) +
geom_bar(aes(x = lucro, y = ano, color = producao), stat = "count")
ggplot(data = aux) +
geom_bar(aes(x = lucro, y = ano, color = producao, , stat = "count"))
ggplot(data = aux) +
geom_bar(aes(x = lucro, y = ano, color = producao, stat = "count"))
ggplot(data = aux) +
geom_line(aes(x = lucro, y = ano, color = producao))
ggplot(data = aux) +
geom_line(aes(x = ano, y = lucro, color = producao))
lucro_producao <- aux %>%
group_by(producao)
View(lucro_producao)
lucro_producao <- aux %>%
group_by(producao)
View(lucro_producao)
summarise_(
media_lucro = mean(lucro, na.rm = TRUE)
)
summarise(
media_lucro = mean(lucro, na.rm = TRUE)
)
lucro_producao <- aux %>%
group_by(producao) %>%
summarise(
media_lucro = mean(lucro, na.rm = TRUE)
)
View(lucro_producao)
tb_lucro_producao <- dados %>%
group_by(producao) %>%
summarise(
media_lucro = mean(lucro, na.rm = TRUE),
media_receita = mean(receita, na.rm = TRUE),
media_orcamento = mean(orcamento, na.rm = TRUE),
media_nota_imdb = mean(nota_imdb, na.rm = TRUE),
qtd_filmes = n()
)
View(tb_lucro_producao)
tb_lucro_producao <- dados %>%
group_by(producao) %>%
summarise(
media_lucro = mean(lucro, na.rm = TRUE),
media_receita = mean(receita, na.rm = TRUE),
media_orcamento = mean(orcamento, na.rm = TRUE),
media_nota_imdb = mean(nota_imdb, na.rm = TRUE),
qtd_filmes = n()) %>%
filter(qtd_filme > 100)
View(tb_lucro_producao)
tb_lucro_producao <- dados %>%
group_by(producao) %>%
summarise(
media_lucro = mean(lucro, na.rm = TRUE),
media_receita = mean(receita, na.rm = TRUE),
media_orcamento = mean(orcamento, na.rm = TRUE),
media_nota_imdb = mean(nota_imdb, na.rm = TRUE),
qtd_filmes = n()) %>%
filter(qtd_filmes > 100)
View(tb_lucro_producao)
tb_lucro_producao <- dados %>%
group_by(producao) %>%
summarise(
media_lucro = mean(lucro, na.rm = TRUE),
media_receita = mean(receita, na.rm = TRUE),
media_orcamento = mean(orcamento, na.rm = TRUE),
media_nota_imdb = mean(nota_imdb, na.rm = TRUE),
qtd_filmes = n()) %>%
filter(qtd_filmes > 10)
View(tb_lucro_producao)
View(tb_lucro_producao)
tb_lucro_diretor <- dados %>%
group_by(direcao) %>%
summarise(
media_receita = mean(receita, na.rm = TRUE),
qtd_filmes = n()
)
View(tb_lucro_diretor)
tb_diretor_produtora <- dados %>%
group_by(direcao, producao) %>%
summarise(
qtd_filmes = n()
)
tb_diretor_produtora <- dados %>%
group_cols_by(direcao, producao) %>%
summarise(
qtd_filmes = n()
)
tb_diretor_produtora <- dados %>%
groups(direcao, producao) %>%
summarise(
qtd_filmes = n()
)
tb_diretor_produtora <- dados %>%
group_by(direcao, producao)
View(tb_diretor_produtora)
tb_diretor_produtora <- dados %>%
group_by(direcao, producao) %>%
summarise(
qtd_filmes = n()
)
View(tb_diretor_produtora)
aux <- tb_diretor_produtora %>% filter(producao == "Lucasfilm")
View(aux)
aux <- tb_diretor_produtora %>% filter(producao == "Marvel Studios")
View(aux)
ggplot(data = aux) +
geom_col(aex(x = direcao))
ggplot(data = aux) +
geom_col(aes(x = direcao))
ggplot(data = aux) +
geom_col(aes(x = direcao, y = count))
ggplot(data = aux) +
geom_bar(aes(x = direcao, y = count))
ggplot(data = aux) +
geom_bar(aes(x = direcao))
aux <- tb_diretor_produtora %>% filter(producao == "Universal Pictures")
ggplot(data = aux) +
geom_bar(aes(x = direcao))
aux <- tb_diretor_produtora %>% filter(producao == "Universal Pictures", qtd_filmes > 5)
ggplot(data = aux) +
geom_bar(aes(x = direcao))
aux <- tb_diretor_produtora %>% filter(producao == "Universal Pictures", qtd_filmes > 10)
ggplot(data = aux) +
geom_bar(aes(x = direcao))
aux <- tb_diretor_produtora %>% filter(producao == "Universal Pictures", qtd_filmes > 5)
ggplot(data = aux) +
geom_bar(aes(x = direcao))
ggplot(data = aux) +
geom_bar(aes(x = direcao, y = qtd_filmes))
ggplot(data = aux) +
geom_point(aes(x = direcao, y = qtd_filmes))
aux <- tb_diretor_produtora %>%
filter(producao == "Universal Pictures", qtd_filmes > 5) %>%
arrange(desc(qtd_filmes))
tb_filmes_ano <- dados %>%
group_by(ano) %>%
summarise(
qtd_filmes = n()
)
View(tb_filmes_ano)
#Gráfico quantidade de filmes por ano
ggplot(data = tb_filmes_ano) +
geom_line(aes(x = qtd_filmes, y = ano))
#Gráfico quantidade de filmes por ano
ggplot(data = tb_filmes_ano) +
geom_line(aes(x = ano, y = qtd_filmes))
#Gráfico quantidade de filmes por ano
ggplot(data = tb_filmes_ano) +
geom_line(aes(x = ano, y = qtd_filmes)) +
theme(
title = "Filmes produzidos por ano"
)
#Gráfico quantidade de filmes por ano
ggplot(data = tb_filmes_ano) +
geom_line(aes(x = ano, y = qtd_filmes)) +
labs(title = "Filmes produzidos por ano")
#Gráfico quantidade de filmes por ano
ggplot(data = tb_filmes_ano) +
geom_line(aes(x = ano, y = qtd_filmes)) +
labs(title = "Filmes produzidos por ano") +
theme(
axis.title = angle(60)
)
#Gráfico quantidade de filmes por ano
ggplot(data = tb_filmes_ano) +
geom_line(aes(x = ano, y = qtd_filmes, color = ano)) +
labs(title = "Filmes produzidos por ano") +
#Gráfico quantidade de filmes por ano
ggplot(data = tb_filmes_ano) +
geom_line(aes(x = ano, y = qtd_filmes, color = ano)) +
labs(title = "Filmes produzidos por ano")
#Gráfico quantidade de filmes por ano
ggplot(data = tb_filmes_ano) +
geom_line(aes(x = ano, y = qtd_filmes, color = ano)) +
labs(title = "Filmes produzidos por ano")
View(tb_lucro_diretor)
View(tb_diretor_produtora)
tb_diretor_produtora <- dados %>%
group_by(direcao, producao) %>%
summarise(
qtd_filmes = n(),
media_lucro = mean(lucro)
)
View(tb_diretor_produtora)
tb_diretor_produtora <- dados %>%
group_by(direcao, producao) %>%
summarise(
qtd_filmes = n(),
receita = sum(lucro)
)
View(tb_diretor_produtora)
aux <- dados %>%
mutate(
genero = strsplit(genero, ",")
)
aux <- dados %>%
mutate(
genero = strsplit(generos, ",")
)
aux
View(aux)
# Visualizar o tipo de dado de cada coluna do dataframe - Biblioteca dplyr (dependente tidyverse)
glimpse(dados)
dados <- dados %>%
mutate(
data_lancamento = as.Date(data_lancamento, format = "%m/%d/%Y")
)
dados <- read.delim("imdb.txt")
dados <- dados %>%
data_lancamento = as.Date(data_lancamento, format = "%m/%d/%Y")
dados$data_lancamento = as.Date(data_lancamento, format = "%m/%d/%Y")
dados$data_lancamento = as.Date(dados$data_lancamento, format = "%m/%d/%Y")
dados <- read.delim("imdb.txt")
dados$data_lancamento = as.Date(dados$data_lancamento, format = "%m/%d/%Y")
dados <- read.delim("imdb.txt")
dados$data_lancamento = as.Date(dados$data_lancamento)
dados$data_lancamento = as.Date(dados$data_lancamento, format= "%Y-%m-%d")
dados <- dados %>%
mutate(
mes = format(data_lancamento, "%m")
)
tb_filmes_mes <- dados %>%
group_by(mes, ano) %>%
mutate(
qtd_filmes = n()
)
View(tb_filmes_mes)
tb_filmes_mes <- dados %>%
group_by(mes, ano) %>%
summarise(
qtd_filmes = n()
)
tb_filmes_mes <- dados %>%
group_by(mes, ano) %>%
summarise(
qtd_filmes = n()
)
View(tb_filmes_mes)
tb_filmes_mes <- dados %>%
filter(mes != NA) %>%
group_by(mes, ano) %>%
summarise(
qtd_filmes = n()
)
View(tb_filmes_mes)
tb_filmes_mes <- dados %>%
group_by(mes, ano) %>%
summarise(
qtd_filmes = n()
)
View(tb_filmes_mes)
tb_filmes_mes <- dados %>%
group_by(mes, ano) %>%
summarise(
qtd_filmes = n()
)
View(tb_filmes_mes)
View(tb_filmes_ano)
library(plotly)
plot_ly(data = tb_filmes_ano) %>%
add_lines(x = ano, y = qtd_filmes)
plot_ly(data = tb_filmes_ano) %>%
add_lines(x = ~ano, y = ~qtd_filmes)
plot_ly(data = tb_filmes_ano) %>%
add_lines(x = ~ano, y = ~qtd_filmes)
tb_filmes_mes_ano <- tb_filmes_mes %>%
inner_join(tb_filmes_ano, ano)
tb_filmes_mes_ano <- tb_filmes_mes %>%
inner_join(tb_filmes_ano)
View(tb_filmes_mes_ano)
tb_filmes_mes_ano <- tb_filmes_ano %>%
inner_join(tb_filmes_mes)
