print("Hello World");
int x = 10;
int x;
x = 10
print(x**2)
x = 20 * x
end()
x = 10;
int x = 10;
if(x == 10){
print("Hello World");
}
if(x != 10){
print("Hello World");
}
print("Ola Mundo")
print("Ola Mundo");
x = integer(1);
if(x != 10){
print("Hello World");
}
if(x != 10){
print("Hello World");
}else if(x == 1){
print("Ola Mundo");
}else{
print("Tchau")
}
if(x != 10){
print("Hello World");
}else if(x == 10){
print("Ola Mundo");
}else{
print("Tchau")
}
if(x >= 10){
print("Hello World");
}else if(x == 10){
print("Ola Mundo");
}else{
print("Tchau")
}
print("Ola")
while TRUE{
print("Ola")
while (x != 1){
print("Ola")
}
for(i = 0; i < 10; i++){
print(nome, "\n")
for (nome in nomes) {
print(nome, "\n")
}
print(nome)
for (nome in nomes) {
print(nome)
}
for (nomes in nome) {
print(nome)
}
library(Rcmdr)
library(ISwR)
View(juul2)
plot.new();
a <- 9
class(a)
a <- as.integer(a)
valores <- c(9, 8, 7, 6, 10, 22, 15)
crescente <- sort(valores, decreasing = FALSE) #Ordena valores em ordem crescente
decrescente <- sort(valores, decreasing = TRUE) # Ordena valores em ordem decrescente
min(valores) #Mostrar o menor valor do vetor
sum(valores) #Somatório dos valores
# Funções:
valores <- c(9, 8, 7, 6, 10)
prod(valores) #Produto dos valores
# Funções:
valores <- c(9, 8, 7, 6, 10, 6)
unique(valores)
unique(valores) #Valores distintos do vetor (sem repetição)
View(juul2)
#__> Criar Vetor, função C
vetorNumerico <- c(1:9) # os ':' retorna a sequencia dos números do intervalo
vetorCaractere <- c("Gabriel", "Spok", "Steve", "Kirk")
vetorLogico <- c(TRUE, TRUE, FALSE, TRUE)
print(vetorNumerico[1])
print(vetorNumerico[1:4]) #Acessar os valores da posiçãoInicial : posicaoF|inal
print(vetorNumerico[-3]) #Índice negativo representa que o valor em determinada posição não será apresentado
print(vetorNumerico[c(-3, -8)])
print(vetorNumerico[c(-3, -8)]) #Não mostrar o valor em mais de uma posição
#Pode se utilizar também operadores lógicos para mostrar determinado índice
vetorNumerico[vetorNumerico > 3]
vetorNumerico <- c(1:90) # os ':' retorna a sequencia dos números do intervalo
vetorNumerico[vetorNumerico < 18 && vetorNumerico > 60]
vetorNumerico[vetorNumerico < 18 | vetorNumerico > 60]
numerosPares <- seq(0, 100, 2)
numerosPares
numerosImpares <- seq(99, 1, -2) #Valores em ordem decresente
numerosImpares
# ------------------------------------------------------------------>> <<------------------------------------------------
# Função rep() - gera uma repetição, no qual o primeiro argumento é o valor a ser repetido e o segundo a quantidade de vezes
rep(99, 7)
seq(99, 1, -2) #Valores em ordem decresente
rep(c(1, 2), 5) #Repetição de um vetor
rep(seq(9, -9, -2), 5)
rep(c(1, 2), c(5, 3)) #Representa a quantidade que cada índice do vetor inicial será repetido por cada indice do segundo
#Listas: corresponde a conjunto de elementos que não necessitam ser da mesma classe(tipo de Dado)
list <- list(1, "Gabriel", "Siqueira", "25/11/2003", "M", "SBS")
View(list)
list <- list(1, "Gabriel", "Siqueira", "25/11/2003", "M", "SBS", c(9, 8.5, 10))
View(list)
#Mostrar determinado elemento
list[[1]]
#Mostrar determinado elemento
list[[2]]
list[[7]][1]
list[c(1, 3)]
list[c(2, 3)]
list[[8]][[1]]
list[[8]][[1]]
list[[8]]
list <- list(1, "Gabriel", "Siqueira", "25/11/2003", "M", "SBS", c(9, 8.5, 10), list(1, "Teste"))
list[[8]][[1]]
list[[8]][[2]]
#Listas na qual cada elemento possui um nome
aluno <- list(nome = "Gabriel", sobrenome = "Siqueira", dataNasc = "25/11/2003", sexo = "M", notas = c(9, 8.5, 10))
View(aluno)
aluno['nome']
names(aluno)
# ------------------------------------------------------------------>> <<------------------------------------------------
# Fatores: correspondem a variáveis categoricas, Na prática, se numa estrutura tiver varios valores iguais (como sexo), e possível agrupar (M ou F) e mostrar a quantidade de vezes que esta valor aparece
niveis <- factor("Bom", "Bom", "Ruim", "Regular", "Péssimo")
# ------------------------------------------------------------------>> <<------------------------------------------------
# Fatores: correspondem a variáveis categoricas, Na prática, se numa estrutura tiver varios valores iguais (como sexo), e possível agrupar (M ou F) e mostrar a quantidade de vezes que esta valor aparece
niveis <- factor("Bom", "Bom", "Ruim", "Regular", "Péssimo")
# ------------------------------------------------------------------>> <<------------------------------------------------
# Fatores: correspondem a variáveis categoricas, Na prática, se numa estrutura tiver varios valores iguais (como sexo), e possível agrupar (M ou F) e mostrar a quantidade de vezes que esta valor aparece
niveis <- factor(c("Bom", "Bom", "Ruim", "Regular", "Péssimo"))
niveis
View(niveis)
summary(niveis)
levels(niveis)
levels(niveis) <- niveis
levels(niveis) <- niveis
niveis
dor <- factor(c("Ruim", "Regular", "Bom"), levels = c("Bom", "Regular", "Ruim"))
# ------------------------------------------------------------------>> <<------------------------------------------------
#Coerção: ao criar um vetor de diversas classes, a linguagem R tenta uma maneira de transformar todos os objetos para a mesma classe.
exemploCoercao <- c(1, TRUE, 2, FALSE)
exemploCoercao
conve2
conve2 <- as.numeric(a)
conve2
a <- 1
conve3 <- as.logical(a)
conve3
conve4 <- as.integer(b) #Converter para integer
b <- 8.5
conve4 <- as.integer(b) #Converter para integer
install.packages("geobr")
teste <- list()
test[] = 1
teste[] = 1
View(teste)
teste[1] = 1
View(teste)
for(i <- 0; i < 10; i <- i + 1){
teste <- c()
teste[1] <- 1
i <- 1;
while(i < 10){
teste[i] <- 1
i <- i + 1
}
#Fora da estetica (aes)
ggplot(data = dados) +
geom_point(
aes(x = LucroLocal, y = LucroMundial, shape = Genero),
color = "darkred"
)#cores pré definidas no R: https://r-charts.com/colors/
e(dplyr)){
if(!require(dplyr)){
install.packages("dplyr")
}else{
library(dplyr)
}
if(!require(ggplot2)){
install.packages("ggplot2")
}
#data, informa o BD; aes(estetica) - O que vai no eixo X e Y;; gem_point(): Apresenta Elemento gráfico, o tipo que será o gráfico, '+' para concatenar script
ggplot(data = dados, aes(x = LucroLocal, y=LucroMundial)) +
geom_point() #Gráfico de disposição
#todo que for texto, considerar que é uma fator
dados <- read.csv2("LucroFilmes.csv", stringsAsFactors = T)
#Carregamento de pacotes
setwd("D:/Gabriel/Meus_Projetos/GitHub/Gabriel/Curso_Estatistica_Com_R")
#todo que for texto, considerar que é uma fator
dados <- read.csv2("LucroFilmes.csv", stringsAsFactors = T)
glimpse(dados)
ggplot(data = dados) +
geom_histogram(aes(x = Orcamento))
ggplot(data = dados) +
geom_point(aes(x = LucroTotal, y = LucroMundial), color = "darkred", shape=16, size=1)
ggplot(data = dados) +
geom_point(aes(x = LucroLocal, y = LucroMundial), color = "darkred", shape=16, size=1)
ggplot(data = dados) +
geom_point(aes(x = LucroLocal, y = LucroMundial), color = "darkred", shape=16, size=0.5)
ggplot(data = dados) +
geom_point(aes(x = LucroLocal, y = LucroMundial), color = "darkred", shape=16, size=0.5) +
geom_line(aes(x = LucroLocal, y = LucroMundial), stat = "smooth")
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5)
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_line(stat = "smoth")
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_line(stat = "smooth")
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_line(stat = "smooth", method = "lm")
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_line()
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_line(stat = "smooth", method = "lm") #Stat - cria uma linha de tendência
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_line(stat = "smooth", method = "lm") #Stat - cria uma linha de tendência, method - linha linear
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_line(stat = "smooth") #Stat - cria uma linha de tendência, method - linha linear
, method = "lm"
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_line(stat = "smooth", method = "lm") #Stat - cria uma linha de tendência, method - linha linear
#geom smooth - cria uma linha de tendência (linear)
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_smooth()
#geom smooth - cria uma linha de tendência (linear)
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_smooth()
#Area sombreada - devio padrão
#geom smooth - cria uma linha de tendência (linear)
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_smooth(method="lm")
#Area sombreada - erro padrão
#geom smooth - cria uma linha de tendência (linear)
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_smooth(method="lm", se = FALSE)#Regressão linear, se - tirar sombreado
#Area sombreada - erro padrão
#geom smooth - cria uma linha de tendência (linear)
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_smooth(method="lm", se = FALSE, size = 2)#Regressão linear, se - tirar sombreado
#Area sombreada - erro padrão
#geom smooth - cria uma linha de tendência (linear)
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_smooth(method="lm", se = FALSE, size = 0.5)#Regressão linear, se - tirar sombreado
#Caso usarem as mesmas essteticas
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5, shape = Distribuidor) +
geom_line(stat = "smooth", method = "lm") #Stat - cria uma linha de tendência, method - linha linear
#Caso usarem as mesmas essteticas
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", size = 0.5, shape = Distribuidor) +
geom_line(stat = "smooth", method = "lm") #Stat - cria uma linha de tendência, method - linha linear
#Caso usarem as mesmas essteticas
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", size = 0.5, shape = Classificacao) +
geom_line(stat = "smooth", method = "lm") #Stat - cria uma linha de tendência, method - linha linear
#Caso usarem as mesmas essteticas
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", size = 0.5, shape = Classificacao) +
geom_line(stat = "smooth", method = "lm") #Stat - cria uma linha de tendência, method - linha linear
#Area sombreada - erro padrão
#geom smooth - cria uma linha de tendência (linear)
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_smooth(method="lm", se = FALSE, size = 0.5)#Regressão linear, se - tirar sombreado
ggplot(data = dados) +
geom_point(aes(x = LucroLocal, y = LucroMundial, , shape = Distribuidor), color = "darkred",  size=0.5) +
geom_line(aes(x = LucroLocal, y = LucroMundial), stat = "smooth")
ggplot(data = dados) +
geom_point(aes(x = LucroLocal, y = LucroMundial, , shape = Classificacao), color = "darkred",  size=0.5) +
geom_line(aes(x = LucroLocal, y = LucroMundial), stat = "smooth")
ggplot(data = dados) +
geom_point(aes(x = LucroLocal, y = LucroMundial, , shape = Classificacao),   size=0.5) +
geom_line(aes(x = LucroLocal, y = LucroMundial), stat = "smooth")
ggplot(data = dados) +
geom_point(aes(x = LucroLocal, y = LucroMundial, , shape = Classificacao, color = Classificacao),   size=0.5) +
geom_line(aes(x = LucroLocal, y = LucroMundial), stat = "smooth")
ggplot(data = dados) +
geom_point(aes(x = LucroLocal, y = LucroMundial, , shape = Classificacao, color = Classificacao),   size=1) +
geom_line(aes(x = LucroLocal, y = LucroMundial), stat = "smooth")
ggplot(data = dados) +
geom_point(aes(x = Mundial, y = LucroLocal, , shape = Classificacao, color = Classificacao),   size=1) +
geom_line(aes(x = LucroLocal, y = LucroMundial), stat = "smooth")
ggplot(data = dados) +
geom_point(aes(x = Mundial, y = LucroLocal, shape = Classificacao, color = Classificacao),   size=1) +
geom_line(aes(x = LucroLocal, y = LucroMundial), stat = "smooth")
ggplot(data = dados) +
geom_point(aes(x = LucroMundial, y = LucroLocal, shape = Classificacao, color = Classificacao),   size=1) +
geom_line(aes(x = LucroLocal, y = LucroMundial), stat = "smooth")
ggplot(data = dados) +
geom_point(aes(x = LucroMundial, y = LucroLocal, shape = Classificacao, color = Classificacao),   size=1) +
geom_line(aes(x = LucroMundial, y = LucroLocal), stat = "smooth")
ggplot(data = dados) +
geom_point(aes(x = LucroMundial, y = LucroLocal, shape = Classificacao, color = Genero),   size=1) +
geom_line(aes(x = LucroMundial, y = LucroLocal), stat = "smooth")
#Area sombreada - erro padrão
#geom smooth - cria uma linha de tendência (linear)
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_smooth(method="lm", se = FALSE, size = 0.5)#Regressão linear, se - tirar sombreado
#Area sombreada - erro padrão
#geom smooth - cria uma linha de tendência (linear)
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = Genero, shape = 16, size = 0.5) +
geom_smooth(method="lm", se = FALSE, size = 0.5)#Regressão linear, se - tirar sombreado
#Area sombreada - erro padrão
#geom smooth - cria uma linha de tendência (linear)
ggplot(data = dados, aes(x=LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", shape = 16, size = 0.5) +
geom_smooth(method="lm", se = FALSE, size = 0.5)#Regressão linear, se - tirar sombreado
#Modificando as ordem das camaadas (a ordem importa)
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial, color = Genero)) +
geom_smooth(se=F, method = "lm")
#Modificando as ordem das camaadas (a ordem importa)
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial)) +
geom_smooth(se=F, method = "lm")
#Modificando as ordem das camaadas (a ordem importa)
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial)) +
geom_smooth(se=F, method = "lm") +
geom_point(color = "darkred")
#Modificando as ordem das camaadas (a ordem importa)
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial)) +
geom_smooth(se=F, method = "lm") +
geom_point(color = "darkblue")
#Modificando as ordem das camaadas (a ordem importa)
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial, color = Genero)) +
geom_smooth(se=F, method = "lm") +
geom_point(color = "darkblue")
#Estetica para cada geom
ggplot(data = dados) +
geom_smooth(se=F, method = "lm", linetype = "dashed") +
geom_point(color = "darkblue")
#Estetica para cada geom
ggplot(data = dados) +
geom_smooth(se=F, method = "lm", aes(linetype = "dashed")) +
geom_point(color = "darkblue")
#Estetica para cada geom
ggplot(data = dados) +
geom_smooth(se=F, method = "lm", aes(linetype = Genero)) +
geom_point(color = "darkblue")
#Estetica para cada geom
ggplot(data = dados) +
geom_smooth(se=F, method = "lm", aes(linetype = Genero)) +
geom_point(color = "darkblue")
#Estetica para cada geom
ggplot(data = dados) +
geom_smooth(se=F, method = "lm", aes(linetype = Genero)) +
geom_point(color = "darkblue")
#Estetica para cada geom
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial, color = Genero)) +
geom_smooth(se=F, method = "lm", aes(linetype = Genero)) +
geom_point(color = "darkblue")
geom_smooth(se=F, method = "lm", aes(linetype = Genero))
#Estetica para cada geom
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial, color = Genero)) +
geom_point(color = "darkblue")
#Estetica para cada geom
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial, color = Genero)) +
geom_point(color = "darkblue") +
geom_smooth(se=F, method = "lm", aes(linetype = Genero))
#Estetica para cada geom
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial)) +
geom_point(color = "darkblue", aes(color = Genero)) +
geom_smooth(se=F, method = "lm", aes(linetype = Genero))
#Estetica para cada geom
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial)) +
geom_point( aes(color = Genero)) +
geom_smooth(se=F, method = "lm", aes(linetype = Genero))
#Estetica para cada geom
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial)) +
geom_point(color = "dark", aes(color = Genero)) +
geom_smooth(se=F, method = "lm", aes(linetype = Genero))
#Estetica para cada geom
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial)) +
geom_point(color = "blue", aes(color = Genero)) +
geom_smooth(se=F, method = "lm", aes(linetype = Genero))
#Estetica para cada geom
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial)) +
geom_point(color = "darkred", aes(color = Genero)) +
geom_smooth(se=F, method = "lm", aes(linetype = Genero))
#Estetica para cada geom
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial)) +
geom_point(color = "black", aes(color = Genero)) +
geom_smooth(se=F, method = "lm", aes(linetype = Genero))
#Estetica para cada geom
ggplot(data = dados, aes(x= LucroLocal, y = LucroMundial)) +
geom_point(color = "black") +
geom_smooth(se=F, method = "lm", aes(linetype = Genero, color = Genero))
#Usando o filtro (dplyr) para selecionar dados para o gráfico
dados %>% filter(Genero == "Comedia") %>%
ggplot(aes(x = LucroMundial, y = LucroLocal)) +
geom_point(shape=16, color = "#d4d4d4")
#Usando o filtro (dplyr) para selecionar dados para o gráfico
dados %>% filter(Genero == "Comedia") %>%
ggplot(aes(x = LucroMundial, y = LucroLocal)) +
geom_point(shape=16, color = "#c")5e3a2
#Usando o filtro (dplyr) para selecionar dados para o gráfico
dados %>% filter(Genero == "Comedia") %>%
ggplot(aes(x = LucroMundial, y = LucroLocal)) +
geom_point(shape=16, color = "#5e3a2")
#Usando o filtro (dplyr) para selecionar dados para o gráfico
dados %>% filter(Genero == "Comedia") %>%
ggplot(aes(x = LucroMundial, y = LucroLocal)) +
geom_point(shape=16, aes(color = Distribuidor))
#Usando o filtro (dplyr) para selecionar dados para o gráfico
dados %>% filter(Genero == "Comedia") %>%
ggplot(aes(x = LucroMundial, y = LucroLocal)) +
geom_point(shape=16, aes(color = Distribuidor))
#Usando o filtro (dplyr) para selecionar dados para o gráfico
dados %>% filter(Genero == "Comedia") %>%
ggplot(aes(x = LucroMundial, y = LucroLocal)) +
geom_point(shape=16 )
#Usando o filtro (dplyr) para selecionar dados para o gráfico
dados %>% filter(Genero == "Comedia") %>%
ggplot(aes(x = LucroMundial, y = LucroLocal)) +
geom_point(shape=16 , color = "#619856")
#Usando o filtro (dplyr) para selecionar dados para o gráfico
dados %>% filter(Genero == "Comedia") %>%
ggplot(aes(x = LucroMundial, y = LucroLocal)) +
geom_point(shape=16 , color = "#619856") +
geom_smooth(method = "lm", se=F, aes(color = Genero))
disney <- dados %>% filter(Distribuidor == "Walt Disney") %>%
View(dados)
disney <- dados %>% filter(Distribuidor == "Walt Disney") %>%
dados %>% filter(Distribuidor == "Walt Disney") %>%
